version: "3.9"

services:
  app:
    build:
      context: ../../backend
      dockerfile: ../docker/dev/Dockerfile.app
    container_name: ai_app
    environment:
      - REDIS_URL=redis://redis:6379
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - MEILI_HOST=http://meilisearch:7700
      - MEILI_MASTER_KEY=devkey
      - TIKA_URL=http://tika:9998
      - EMBED_URL=http://ollama:11434/v1/embeddings
      - GENERATE_URL=http://ollama:11434/v1/chat/completions
    ports:
      - "8000:8000"
    volumes:
      - ../../backend:/app
    depends_on:
      - redis
      - qdrant
      - meilisearch
      - tika
      - ollama
    restart: unless-stopped

  qdrant:
    image: qdrant/qdrant:v1.9.1
    container_name: ai_qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_storage:/qdrant/storage
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: ai_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  meilisearch:
    image: getmeili/meilisearch:v1.7.3
    container_name: ai_meilisearch
    environment:
      - MEILI_MASTER_KEY=devkey
    ports:
      - "7700:7700"
    volumes:
      - meili_data:/meili_data
    restart: unless-stopped

  nginx:
    image: nginx:1.25-alpine
    container_name: ai_nginx
    ports:
      - "80:80"
    volumes:
      - ../../frontend/dist:/usr/share/nginx/html
      - ./nginx.dev.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    restart: unless-stopped

  tika:
    image: apache/tika:2.9.1.0
    container_name: ai_tika
    ports:
      - "9998:9998"
    restart: unless-stopped

  ollama:
    image: ollama/ollama:0.1.44
    container_name: ai_ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_models:/root/.ollama
    environment:
      - OLLAMA_ORIGINS=*
    restart: unless-stopped

volumes:
  qdrant_storage:
  redis_data:
  meili_data:
  ollama_models:
